<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bootstrap on Takahiro ONOSHIMA&#39;s website</title>
    <link>https://onoshima.github.io/tags/bootstrap/</link>
    <description>Recent content in bootstrap on Takahiro ONOSHIMA&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Takahiro ONOSHIMA</copyright>
    <lastBuildDate>Wed, 03 Jul 2019 07:10:40 +0900</lastBuildDate><atom:link href="https://onoshima.github.io/tags/bootstrap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ブートストラップについての調べもの</title>
      <link>https://onoshima.github.io/posts/boot/</link>
      <pubDate>Wed, 03 Jul 2019 07:10:40 +0900</pubDate>
      
      <guid>https://onoshima.github.io/posts/boot/</guid>
      <description>Rでブートストラップについて調べたときの記録。
ブートストラップとは 大雑把に言えば, 統計量とかの分布を調べたりするために1つの標本から新しい標本（ブートストラップ標本）を何個も作ることのようだ。パラメトリックとノンパラメトリックがある。
今回扱うのはノンパラメトリックの方。
自作関数によるブートストラップ ブートストラップ標本を作るときには, もとの標本から同じサイズで復元抽出を行う。復元抽出とは要するに, くじ引きでくじを引くたびにもとの箱にくじを戻すことである。たとえば, 【太郎さん、花子さん、和夫さん】の3人からなるもとの標本があった場合に, あるブートストラップ標本では【太郎さん, 太郎さん, 花子さん】になるかもしれないし, 別のブートストラップ標本では【和夫さん, 和夫さん, 和夫さん】となるかもしれない。Rで復元抽出を行う際にはsamaple()関数の引数でreplace=TRUEを指定すると良い。試しにやってみる。Rの組み込みのデータセットであるstateからアメリカ50州の収入のデータを使って, 平均値と中央値がどのように分布するかを見てみる。
# もとの標本 original &amp;lt;- state.x77[,&amp;#34;Income&amp;#34;] # 元の標本から復元抽出する回数 num.bs.sample &amp;lt;- 1000 # 結果を保存するようベクトル median.vector &amp;lt;- numeric(num.bs.sample) mean.vector &amp;lt;- numeric(num.bs.sample) for (i in 1:num.bs.sample){ median.vector[i] &amp;lt;- median(sample(original, length(original), replace=TRUE)) mean.vector[i] &amp;lt;- mean(sample(original, length(original), replace=T)) } # 結果の図示 boxplot(median.vector, mean.vector, names=c(&amp;#34;Median&amp;#34;,&amp;#34;Mean&amp;#34;), horizontal = T, las=T, xlab=&amp;#34;Income&amp;#34;) 結果は次のとおりである。これを使うと中央値の経験的な分布なども求められる。
bootパッケージによるブートストラップ 毎回, 自分で繰り返しのループを書くのも面倒であろうということでbootという便利なパッケージがある。boot(もとの標本, 統計量を求める関数, ブートストラップ標本数)のように使う使うらしい。同じデータでやってみよう。
library(boot) foo &amp;lt;- function(d,k){ median.</description>
    </item>
    
  </channel>
</rss>
